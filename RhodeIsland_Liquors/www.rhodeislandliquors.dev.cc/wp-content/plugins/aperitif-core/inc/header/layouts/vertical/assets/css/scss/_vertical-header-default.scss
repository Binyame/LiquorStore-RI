/* Vertical header style - start */

$vertical-header-width: 300px;

$vertical-content-grid-width-responsive-map: (
		1400 : (
				responsive-break: (
						$screen-size-1367: $screen-size-1680,
						$screen-size-1281: $screen-size-1366,
						$screen-size-1025: $screen-size-1280,
				),
				content-grid-width: (
						$content-grid-width-1100,
						$content-grid-width-screen-size-1200,
						$content-grid-width-screen-size-1024,
				)
		),
		1300 : (
				responsive-break: (
						$screen-size-1367: $screen-size-1680,
						$screen-size-1281: $screen-size-1366,
						$screen-size-1025: $screen-size-1280,
				),
				content-grid-width: (
						$content-grid-width-1100,
						$content-grid-width-screen-size-1200,
						$content-grid-width-screen-size-1024,
				)
		),
		1200 : (
				responsive-break: (
						$screen-size-1367: $screen-size-1440,
						$screen-size-1281: $screen-size-1366,
						$screen-size-1025: $screen-size-1280,
				),
				content-grid-width: (
						$content-grid-width-1100,
						$content-grid-width-screen-size-1200,
						$content-grid-width-screen-size-1024,
				)
		),
		1100 : (
				responsive-break: (
						$screen-size-1281: $screen-size-1366,
						$screen-size-1025: $screen-size-1280,
				),
				content-grid-width: (
						$content-grid-width-screen-size-1200,
						$content-grid-width-screen-size-1024,
				)
		)
);

.qodef-header--vertical {
	
	.qodef-content-grid {
		
		@each $key, $values in $vertical-content-grid-width-responsive-map {
			$index: 1;
			
			@each $responsive-key, $responsive-value in map-deep-get($vertical-content-grid-width-responsive-map, $key, 'responsive-break') {
				
				@media only screen and (min-width: $responsive-key) and (max-width: $responsive-value) {
					
					@at-root .qodef-content-grid-#{$key}#{&} {
						width: #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)}
					}
				}
				
				$index: $index + 1;
			}
		}
	}
	
	#qodef-page-header {
		position: fixed;
		top: 0;
		left: 0;
		width: $vertical-header-width;
		height: 100%;
		background-color: #fff;
		z-index: 100;
	}
	
	#qodef-page-header-inner {
		display: flex;
		justify-content: space-between;
		flex-direction: column;
		padding: 35px;
		align-items: center;
		
		.qodef-header-navigation {
			
			ul {
				display: block;
				
				> li {
					margin: 0;
				}
			}
		}
		
		.qodef-vertical-widget-holder {
			display: block;
		}
	}
	
	&.admin-bar {
		
		#qodef-page-header {
			top: 32px;
			height: calc(100% - 32px);
		}
	}
	
	#qodef-page-outer,
	#qodef-page-footer {
		padding-left: $vertical-header-width;
	}
	
	&.qodef-header--light {
		
		.qodef-vertical-widget-holder {
			
			.widget {
				
				a, span {
					color: $main-color;
					
					&:hover {
						color: #fff !important;
					}
				}
			}
		}
	}
	
	&.qodef-header--dark {
		
		.qodef-vertical-widget-holder {
			
			.widget {
				
				a, span {
					color: $main-color;
					
					&:hover {
						color: #000 !important;
					}
				}
			}
		}
	}
	
}

/* Vertical header style - end */
